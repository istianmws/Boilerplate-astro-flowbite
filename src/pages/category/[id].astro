---
import MainLayout from "../../layouts/MainLayout.astro";
import PremiumAds from "../../components/sections/SectionPremiumAds.astro";
import SectionCategory from "../../components/sections/SectionCategory.astro";
import fetchApi from "../../lib/strapi";
import CardAd from "../../components/CardAd.astro";
import NotFound from "../../components/NotFound.astro";

const { id } = Astro.params;
const url = new URL(Astro.url);
const page = url.searchParams.get("page") === null ? 1 : parseInt((url.searchParams.get("page")),10);
const kategori = url.searchParams.get("kategori");

async function getKategori(id) {
  try {
    let endpoint_card = `kategoris/${id}`;
    const categories = await fetchApi({
      endpoint: endpoint_card, // the content type to fetch
      wrappedByKey: "data",
    });

    return categories.attributes;
  } catch (error) {
    console.error("There was a problem with the fetch operation:", error);
  }
}

async function getKontens(id, page = 1) {
  try {
    let endpoint_card = `kontens?filters[kategoris][id][$eq]=${id}&populate=foto,pengiklan,foto_utama&pagination[page]=${page}&pagination[pageSize]=${import.meta.env.PAGE_SIZE}`;
    const kontens = await fetchApi({
      endpoint: endpoint_card, // the content type to fetch
    });
    console.log(endpoint_card);
    return kontens;
  } catch (error) {
    console.error("There was a problem with the fetch operation:", error);
  }
}

const categori = await getKategori(id);
const data_kontens = await getKontens(id, page);
const paging = data_kontens.meta.pagination;
const kontens = data_kontens.data;

---

<MainLayout title="category">
  {
    categori ? (
      <div>
        <div
          class="grid grid-cols items-center justify-items-center mx-auto p-5 mt-24"
        >
          <div class="flex flex-col justify-self-start">
            <div class="text-[#c32f27] text-[32px] font-bold font-['Kumbh Sans']">
              {categori.nama}
              <span class="text-[#2b2d42] text-[32px] font-bold font-['Kumbh Sans']"
              ></span>
            </div>
            <div
              class="flex text-[#2b2d42] text-base font-normal font-['Kumbh Sans']"
            >
              {categori.deskripsi}
            </div>
          </div>
        </div>

        <div
          class="grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 p-4 mt-5 justify-items-center place-content-center"
        >
        {
          kontens.length > 0 ? (
            kontens.map((konten) => (
              <CardAd
                id={konten.id}
                title={konten.attributes.judul}
                desc={konten.attributes.deskripsi_singkat}
                img={konten.attributes.foto_utama.data.attributes.formats?.small?.url 
    ?? konten.attributes.foto_utama.data.attributes.url}
                data_pengiklan={konten.attributes.pengiklan?.data?.attributes ?? null}
              />
            ))
          ) : (
            <div class="p-4 mb-4 text-sm text-green-800 rounded-lg bg-green-50 dark:bg-gray-800 dark:text-green-400" role="alert">
              <span class="font-medium">Data belum ada</span> Jadi konten pertama yang tampil pada halaman ini 
            </div>
          )
        }
        </div>

        <!-- Paginasi -->
        <div class="px-6 mt-5 flex">
          <!-- Previous Button -->
          {
            paging && paging.page !== 1 && (
              <a
                href=`?kategori=${kategori}&page=${paging.page - 1}`
                class="flex items-center justify-center px-4 h-10 me-3 text-base font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
              >
                <svg
                  class="w-3.5 h-3.5 me-2 rtl:rotate-180"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 14 10"
                >
                  <path
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M13 5H1m0 0 4 4M1 5l4-4"
                  />
                </svg>
                Previous
              </a>
            )
          }

          {
            paging && paging.page < paging.pageCount && (
              <a
                href=`?kategori=${kategori}&page=${paging.page + 1}`
                class="flex items-center justify-center px-4 h-10 text-base font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
              >
                Next
                <svg
                  class="w-3.5 h-3.5 ms-2 rtl:rotate-180"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 14 10"
                >
                  <path
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M1 5h12m0 0L9 1m4 4L9 9"
                  />
                </svg>
              </a>
            )
          }
        </div>
      </div>
  ) : (
      <NotFound />
    )
  }

</MainLayout>
